//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketDesk.Localization.PushNotifications {
    using System;
    
    
    /// <summary>
    ///   Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
    /// </summary>
    // Questa classe è stata generata automaticamente dalla classe StronglyTypedResourceBuilder.
    // tramite uno strumento quale ResGen o Visual Studio.
    // Per aggiungere o rimuovere un membro, modificare il file con estensione ResX ed eseguire nuovamente ResGen
    // con l'opzione /str oppure ricompilare il progetto VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TicketDesk.Localization.PushNotifications.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
        ///   ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a ApiKey.
        /// </summary>
        public static string ApiKey {
            get {
                return ResourceManager.GetString("ApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The ApiKey used to authenticate with SendGrid (this provider does not support username/password credentials)..
        /// </summary>
        public static string ApiKey_Description {
            get {
                return ResourceManager.GetString("ApiKey_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enable background notification queues.
        /// </summary>
        public static string BackgroundQueueEnabled {
            get {
                return ResourceManager.GetString("BackgroundQueueEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enables background queuing of notifications.&lt;br&gt;&lt;br&gt;Affects localizaton! When background queue is enabled, all email notificaitons are localized using the server&apos;s default culture and language. When disabled, the user&apos;s language choices will be used to generate emails..
        /// </summary>
        public static string BackgroundQueueEnabled_Description {
            get {
                return ResourceManager.GetString("BackgroundQueueEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string BackgroundQueueEnabled_Prompt {
            get {
                return ResourceManager.GetString("BackgroundQueueEnabled_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Broadcast Mode.
        /// </summary>
        public static string BroadcastMode {
            get {
                return ResourceManager.GetString("BroadcastMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Send new ticket notifications to a custom email distrubution list, or to all TicketDesk admin and staff users..
        /// </summary>
        public static string BroadcastMode_Description {
            get {
                return ResourceManager.GetString("BroadcastMode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Click Tracking.
        /// </summary>
        public static string ClickTracking {
            get {
                return ResourceManager.GetString("ClickTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enables SendGrid&apos;s click tracking feature.
        /// </summary>
        public static string ClickTracking_Description {
            get {
                return ResourceManager.GetString("ClickTracking_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string ClickTracking_Prompt {
            get {
                return ResourceManager.GetString("ClickTracking_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Consolidate notifications.
        /// </summary>
        public static string ConsolidateNotifications {
            get {
                return ResourceManager.GetString("ConsolidateNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Consolidation allows push notifications for an event to be delayed for a short time. If additional events occur for the same subscriber and ticket, they will be grouped into a single message instead of being sent separately. This reduces spam in cases where many chages are made to a ticket in rapid succession..
        /// </summary>
        public static string ConsolidateNotifications_Description {
            get {
                return ResourceManager.GetString("ConsolidateNotifications_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string ConsolidateNotifications_Prompt {
            get {
                return ResourceManager.GetString("ConsolidateNotifications_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Delivery Attempt Interval (minutes).
        /// </summary>
        public static string DeliveryAttemptInterval {
            get {
                return ResourceManager.GetString("DeliveryAttemptInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a How often to check for push notifications that are ready to be sent..
        /// </summary>
        public static string DeliveryAttemptInterval_Description {
            get {
                return ResourceManager.GetString("DeliveryAttemptInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Delivery Providers.
        /// </summary>
        public static string DeliveryProviders {
            get {
                return ResourceManager.GetString("DeliveryProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enable SSL.
        /// </summary>
        public static string EnableSSL {
            get {
                return ResourceManager.GetString("EnableSSL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Exclude subscriber&apos;s own events.
        /// </summary>
        public static string ExcludeSubscribersOwnEvents {
            get {
                return ResourceManager.GetString("ExcludeSubscribersOwnEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a HIGHLY RECOMMENDED! This prevents push notifications from being sent to the same user whose action triggered the notification..
        /// </summary>
        public static string ExcludeSubscribersOwnEvents_Description {
            get {
                return ResourceManager.GetString("ExcludeSubscribersOwnEvents_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Exclude.
        /// </summary>
        public static string ExcludeSubscribersOwnEvents_Prompt {
            get {
                return ResourceManager.GetString("ExcludeSubscribersOwnEvents_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a From Address.
        /// </summary>
        public static string FromAddress {
            get {
                return ResourceManager.GetString("FromAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The email address to use when sending email from this povider.
        /// </summary>
        public static string FromAddress_Description {
            get {
                return ResourceManager.GetString("FromAddress_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a From Display Name.
        /// </summary>
        public static string FromDisplayName {
            get {
                return ResourceManager.GetString("FromDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The friendly name to use in the from address.
        /// </summary>
        public static string FromDisplayName_Description {
            get {
                return ResourceManager.GetString("FromDisplayName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Gravatar.
        /// </summary>
        public static string Gravatar {
            get {
                return ResourceManager.GetString("Gravatar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enables SendGrid&apos;s gravatar feature (you should make sure the from account configured here has a gravatar account).
        /// </summary>
        public static string Gravatar_Description {
            get {
                return ResourceManager.GetString("Gravatar_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string Gravatar_Prompt {
            get {
                return ResourceManager.GetString("Gravatar_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Initial consolidation delay (minutes).
        /// </summary>
        public static string InitialConsolidationDelay {
            get {
                return ResourceManager.GetString("InitialConsolidationDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The initial number of minutes to wait. If new events occur for the same subscriber and ticket, the system will consolidate the messages into a single notification. Subsequent events will increase the delay until either no further events occur, or the maximum delay period has expired..
        /// </summary>
        public static string InitialConsolidationDelay_Description {
            get {
                return ResourceManager.GetString("InitialConsolidationDelay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Initial Retry Interval (minutes).
        /// </summary>
        public static string InitialRetryInterval {
            get {
                return ResourceManager.GetString("InitialRetryInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Number of minutes to wait before the first retry attempt. Subsequent retry attempts occur at interval raised to the number of retry attempts. Example: interval = 2 and retry = 3, next attempt will be in 8 minutes.
        /// </summary>
        public static string InitialRetryInterval_Description {
            get {
                return ResourceManager.GetString("InitialRetryInterval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a New Ticket Notificatons Enabled.
        /// </summary>
        public static string IsBroadcastEnabled {
            get {
                return ResourceManager.GetString("IsBroadcastEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string IsBroadcastEnabled_Prompt {
            get {
                return ResourceManager.GetString("IsBroadcastEnabled_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Maximum consolidation delay (minutes).
        /// </summary>
        public static string MaximumConsolidationDelay {
            get {
                return ResourceManager.GetString("MaximumConsolidationDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The maximum amount of time to delay sending a notification..
        /// </summary>
        public static string MaximumConsolidationDelay_Description {
            get {
                return ResourceManager.GetString("MaximumConsolidationDelay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Notifications Enabled.
        /// </summary>
        public static string NotificationsEnabled {
            get {
                return ResourceManager.GetString("NotificationsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string NotificationsEnabled_Prompt {
            get {
                return ResourceManager.GetString("NotificationsEnabled_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Number of Retry Attempts.
        /// </summary>
        public static string NumberOfRetryAttempts {
            get {
                return ResourceManager.GetString("NumberOfRetryAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a When things go wrong, this determines the number of attempts to make before marking a message as failed..
        /// </summary>
        public static string NumberOfRetryAttempts_Description {
            get {
                return ResourceManager.GetString("NumberOfRetryAttempts_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Open Tracking.
        /// </summary>
        public static string OpenTracking {
            get {
                return ResourceManager.GetString("OpenTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enables SendGrid&apos;s open tracking feature.
        /// </summary>
        public static string OpenTracking_Description {
            get {
                return ResourceManager.GetString("OpenTracking_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string OpenTracking_Prompt {
            get {
                return ResourceManager.GetString("OpenTracking_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Provider.
        /// </summary>
        public static string Provider {
            get {
                return ResourceManager.GetString("Provider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string Provider_Prompt {
            get {
                return ResourceManager.GetString("Provider_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Send to all administrators and help desk staff.
        /// </summary>
        public static string PushNotificationBroadcastModeAllStaff {
            get {
                return ResourceManager.GetString("PushNotificationBroadcastModeAllStaff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Send to specified email address.
        /// </summary>
        public static string PushNotificationBroadcastModeCustomAddress {
            get {
                return ResourceManager.GetString("PushNotificationBroadcastModeCustomAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SendGrid Provider (Email).
        /// </summary>
        public static string SendGridProvider {
            get {
                return ResourceManager.GetString("SendGridProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a To Email Address.
        /// </summary>
        public static string SendToCustomEmailAddress {
            get {
                return ResourceManager.GetString("SendToCustomEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The email recipient address. Used only when the mode is set to use a custom email address.
        /// </summary>
        public static string SendToCustomEmailAddress_Description {
            get {
                return ResourceManager.GetString("SendToCustomEmailAddress_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a To Email Display Name.
        /// </summary>
        public static string SendToCustomEmailDisplayName {
            get {
                return ResourceManager.GetString("SendToCustomEmailDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The display name for the email recipient. Used only when the mode is set to use a custom email address.
        /// </summary>
        public static string SendToCustomEmailDisplayName_Description {
            get {
                return ResourceManager.GetString("SendToCustomEmailDisplayName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Send to Sink.
        /// </summary>
        public static string SendToSink {
            get {
                return ResourceManager.GetString("SendToSink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Sends all emails to SendGrid&apos;s sink address (useful when testing email delivery to prevent sending mail to real recipients).
        /// </summary>
        public static string SendToSink_Description {
            get {
                return ResourceManager.GetString("SendToSink_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Enabled.
        /// </summary>
        public static string SendToSink_Prompt {
            get {
                return ResourceManager.GetString("SendToSink_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SMTP From Address.
        /// </summary>
        public static string SMTPFromAddress {
            get {
                return ResourceManager.GetString("SMTPFromAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The email address to use when sending email from this povider.
        /// </summary>
        public static string SMTPFromAddress_Description {
            get {
                return ResourceManager.GetString("SMTPFromAddress_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SMTP From Display Name.
        /// </summary>
        public static string SMTPFromDisplayName {
            get {
                return ResourceManager.GetString("SMTPFromDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a The friendly name to use in the from address.
        /// </summary>
        public static string SMTPFromDisplayName_Description {
            get {
                return ResourceManager.GetString("SMTPFromDisplayName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SMTP Password.
        /// </summary>
        public static string SMTPPassword {
            get {
                return ResourceManager.GetString("SMTPPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Leave empty if authentication is not required.
        /// </summary>
        public static string SMTPPassword_Description {
            get {
                return ResourceManager.GetString("SMTPPassword_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SMTP Port.
        /// </summary>
        public static string SMTPPort {
            get {
                return ResourceManager.GetString("SMTPPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SMTP Provider (Email).
        /// </summary>
        public static string SMTPProvider {
            get {
                return ResourceManager.GetString("SMTPProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SMTP Server Name.
        /// </summary>
        public static string SMTPServerName {
            get {
                return ResourceManager.GetString("SMTPServerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a SMTP User Name.
        /// </summary>
        public static string SMTPUserName {
            get {
                return ResourceManager.GetString("SMTPUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a Leave empty if authentication is not required.
        /// </summary>
        public static string SMTPUserName_Description {
            get {
                return ResourceManager.GetString("SMTPUserName_Description", resourceCulture);
            }
        }
    }
}
